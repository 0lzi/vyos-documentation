# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, VyOS maintainers and contributors
# This file is distributed under the same license as the VyOS package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: VyOS 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-21 12:01+0200\n"
"PO-Revision-Date: 2022-10-21 10:04+0000\n"
"Language-Team: German (Germany) (https://www.transifex.com/vyos/teams/155110/de_DE/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de_DE\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../contributing/testing.rst:5 12f678d43bd94c489aa570e0c4ca556e
msgid "Testing"
msgstr ""

#: ../../contributing/testing.rst:7 f01ded081f2343928f839bb0cab1db56
msgid ""
"One of the major advantages introduced in VyOS 1.3 is an autmated test "
"framework. When assembling an ISO image multiple things can go wrong badly "
"and publishing a faulty ISO makes no sense. The user is disappointed by the "
"quality of the image and the developers get flodded with bug reports over "
"and over again."
msgstr ""

#: ../../contributing/testing.rst:12 0dfb498ddebc4d768ced32229293e682
msgid ""
"As the VyOS documentation is not only for users but also for the developers "
"- and we keep no secret documentation - this section describes how the "
"automated testing works."
msgstr ""

#: ../../contributing/testing.rst:17 9dbc2349b1a84132887c40f32c547d70
msgid "Jenkins CI"
msgstr ""

#: ../../contributing/testing.rst:19 bc6c0084cd434bf0aab4728193354604
msgid ""
"Our `VyOS CI`_ system is based on Jenkins and builds all our required "
"packages for VyOS 1.2 to 1.4. In addition to the package build, there is the"
" vyos-build Job which builds and tests the VyOS ISO image which is published"
" after a successfull test drive."
msgstr ""

#: ../../contributing/testing.rst:24 9b7434772d0a429aaa2938e74a895de1
msgid ""
"We differentiate in two independent tests, which are both run in parallel by"
" two separate QEmu instances which are launched via ``make test`` and ``make"
" testc`` from within the vyos-build_ repository."
msgstr ""

#: ../../contributing/testing.rst:29 74b920e0bd134fa988efdec86b23d357
msgid "Smoketests"
msgstr ""

#: ../../contributing/testing.rst:31 c12843ff659149af976fdefd7ea393ef
msgid ""
"Smoketests executes predefined VyOS CLI commands and checks if the desired "
"daemon/service configuration is rendert - that is how to put it \"short\"."
msgstr ""

#: ../../contributing/testing.rst:34 00d52833413c4a318da64b20fc7ba1a7
msgid ""
"When and ISO image is assembled by the `VyOS CI`_, the ``BUILD_SMOKETEST`` "
"parameter is enabled by default, which will extend the ISO configuration "
"line with the following packages:"
msgstr ""

#: ../../contributing/testing.rst:44 37eedf5c4a604af781cedd13458f8e5e
msgid ""
"So if you plan to build your own custom ISO image and wan't to make use of "
"our smoketests, ensure that you have the `vyos-1x-smoketest` package "
"installed."
msgstr ""

#: ../../contributing/testing.rst:47 da014d1914214bcaab3956a92c81bf48
msgid ""
"The ``make test`` command from the vyos-build_ repository will launch a new "
"QEmu instance and the ISO image is first installed to the virtual harddisk."
msgstr ""

#: ../../contributing/testing.rst:50 fd8bcaef78c9475e88f07247c4a34e8f
msgid ""
"After its first boot into the newly installed system the main Smoketest "
"script is executed, it can be found here: `/usr/bin/vyos-smoketest`"
msgstr ""

#: ../../contributing/testing.rst:53 d29e928983634961b080fe7c8604694d
msgid ""
"The script only searches for executable \"test-cases\" under "
"``/usr/libexec/vyos/tests/smoke/cli/`` and executes them one by one."
msgstr ""

#: ../../contributing/testing.rst:56 a68164b072394a8daf96e84a7a196c0c
msgid ""
"As Smoketests will alter the system configuration and you are logged in "
"remote you may loose your connection to the system."
msgstr ""

#: ../../contributing/testing.rst:60 14fe375078034abfb14b552724557ae7
msgid "Manual Smoketest Run"
msgstr ""

#: ../../contributing/testing.rst:62 48458c32bdd24b839fced729143b04e4
msgid ""
"On the other hand - as each test is contain in its own file - one can always"
" execute a single Smoketest by hand by simply running the Python test "
"scripts."
msgstr ""

#: ../../contributing/testing.rst:65 8f9365c2d06f4b818faa18a0951447af
msgid "Example:"
msgstr ""

#: ../../contributing/testing.rst:90 96a57240744b4485b78bedb198064a87
msgid "Interface based tests"
msgstr ""

#: ../../contributing/testing.rst:92 a53042041eaa4a07b44f7fe6a3ca88c8
msgid ""
"Our smoketests not only test daemons and serives, but also check if what we "
"configure for an interface works. Thus there is a common base classed named:"
" ``base_interfaces_test.py`` which holds all the common code that an "
"interface supports and is tested."
msgstr ""

#: ../../contributing/testing.rst:97 edc3bb0938f140cd8e9087ce2d0d2adf
msgid "Those common tests consists out of:"
msgstr ""

#: ../../contributing/testing.rst:99 ff30b0f5d774470b89dea6d5b0a8ecc7
msgid "Add one or more IP addresses"
msgstr ""

#: ../../contributing/testing.rst:100 fd357f424d154e57a1d1990529a1e255
msgid "DHCP client and DHCPv6 prefix delegation"
msgstr ""

#: ../../contributing/testing.rst:101 24e70da5dff347b6820a175f6bb6a0af
msgid "MTU size"
msgstr ""

#: ../../contributing/testing.rst:102 1940344c3e8b4f7793780e32ec0f843c
msgid "IP and IPv6 options"
msgstr ""

#: ../../contributing/testing.rst:103 f7ce56b3c8d042768b32349da21f1cc0
msgid "Port description"
msgstr ""

#: ../../contributing/testing.rst:104 c24b306b179e4cfeb1602f4c43e74626
msgid "Port disable"
msgstr ""

#: ../../contributing/testing.rst:105 6a744f5f6064443298a29a6c903fd81c
msgid "VLANs (QinQ and regular 802.1q)"
msgstr ""

#: ../../contributing/testing.rst:106 73bc9780c5694384b0d9f09c24c4daf1
msgid "..."
msgstr ""

#: ../../contributing/testing.rst:108 e76b5f62ef9b4d58875686621b54283a
msgid ""
"When you are working on interface configuration and you also wan't to test "
"if the Smoketests pass you would normally loose the remote SSH connection to"
" your :abbr:`DUT (Device Under Test)`. To handle this issue, some of the "
"interface based tests can be called with an environment variable beforehand "
"to limit the number of interfaces used in the test. By default all interface"
" e.g. all Ethernet interfaces are used."
msgstr ""

#: ../../contributing/testing.rst:147 d1e0e72d711c43679c7f4f07abcd20eb
msgid ""
"This will limit the `bond` interface test to only make use of `eth1` and "
"`eth2` as member ports."
msgstr ""

#: ../../contributing/testing.rst:151 e0946dbd689b436897ae38ea0620c4d5
msgid "Config Load Tests"
msgstr ""

#: ../../contributing/testing.rst:153 15cca66010514b56a714892d1e371145
msgid ""
"The other part of our tests are called \"config load tests\". The config "
"load tests will load - one after another - arbitrary configuration files to "
"test if the configuration migration scripts work as designed and that a "
"given set of functionality still can be loaded with a fresh VyOS ISO image."
msgstr ""

#: ../../contributing/testing.rst:158 d71157cea333454fb83ca4420c378fd7
msgid ""
"The configurations are all derived from production systems and can not only "
"act as a testcase but also as reference if one wants to enable a certain "
"feature. The configurations can be found here: "
"https://github.com/vyos/vyos-1x/tree/current/smoketest/configs"
msgstr ""

#: ../../contributing/testing.rst:163 db34600555b3424a9b1f086bfc8a2c1a
msgid ""
"The entire test is controlled by the main wrapper script ``/usr/bin/vyos-"
"configtest`` which behaves in the same way as the main smoketest script. It "
"scans the folder for potential configuration files and issues a ``load`` "
"command one after another."
msgstr ""

#: ../../contributing/testing.rst:168 f205e96b0e574f7aa73a44521ee55ae0
msgid "Manual config load test"
msgstr ""

#: ../../contributing/testing.rst:170 87a92c6df15e43ad89c4a07203664740
msgid ""
"One is not bound to load all configurations one after another but can also "
"load individual test configurations on his own."
msgstr ""

#: ../../contributing/testing.rst:201 80c566100698466e8a18a599df3a5fa0
msgid ""
"Some of the configurations have preconditions which need to be met. Those "
"most likely include generation of crypographic keys before the config can be"
" applied - you will get a commit error otherwise. If you are interested how "
"those preconditions are fulfilled check the vyos-build_ repository and the "
"``scripts/check-qemu-install`` file."
msgstr ""
